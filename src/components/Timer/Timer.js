import React, { useState, useEffect, useCallback } from 'react';
import './Timer.css';

const Timer = ({ isActive, onReset }) => {
    const [time, setTime] = useState(0);
    const [isRunning, setIsRunning] = useState(false);

    // –ó–∞–ø—É—Å–∫/–∑—É–ø–∏–Ω–∫–∞ —Ç–∞–π–º–µ—Ä–∞
    useEffect(() => {
        let interval;
        if (isActive && isRunning) {
            interval = setInterval(() => {
                setTime(prevTime => prevTime + 1);
            }, 10); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 10–º—Å –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç—ñ
        }
        return () => clearInterval(interval);
    }, [isActive, isRunning]);

    // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É
    const formatTime = useCallback((centiseconds) => {
        const minutes = Math.floor(centiseconds / 6000);
        const seconds = Math.floor((centiseconds % 6000) / 100);
        const cs = centiseconds % 100;

        return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${cs.toString().padStart(2, '0')}`;
    }, []);

    // –ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–∞–π–º–µ—Ä–∞
    const startStop = useCallback(() => {
        setIsRunning(!isRunning);
    }, [isRunning]);

    const resetTimer = useCallback(() => {
        setTime(0);
        setIsRunning(false);
        if (onReset) onReset();
    }, [onReset]);

    return (
        <div className={`timer ${isRunning ? 'running' : ''}`}>
            <div className="timer__status"></div>

            <div className="timer__display">
                ‚è±Ô∏è {formatTime(time)}
            </div>

            <div className="timer__controls">
                <button
                    onClick={startStop}
                    className={`timer__button ${isRunning ? 'stop' : 'start'}`}
                    title={isRunning ? '–ó—É–ø–∏–Ω–∏—Ç–∏ —Ç–∞–π–º–µ—Ä' : '–ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–∞–π–º–µ—Ä'}
                >
                    {isRunning ? '‚è∏Ô∏è –°—Ç–æ–ø' : '‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç'}
                </button>
                <button
                    onClick={resetTimer}
                    className="timer__button reset"
                    title="–°–∫–∏–Ω—É—Ç–∏ —Ç–∞–π–º–µ—Ä"
                >
                    üîÑ –°–∫–∏–Ω—É—Ç–∏
                </button>
            </div>
        </div>
    );
};

export default Timer;